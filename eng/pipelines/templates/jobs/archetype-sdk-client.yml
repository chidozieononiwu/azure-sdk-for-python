parameters:
  ServiceDirectory: ''
  Artifacts: []
  BeforePublishSteps: []
  TestMarkArgument: ''
  BuildTargetingString: 'azure-*'
  TestTimeoutInMinutes: 0
  ToxEnvParallel: '--tenvparallel'
  InjectedPackages: ''
  BuildDocs: true
  TestMatrix:
    Linux_Python27:
      OSVmImage: 'ubuntu-18.04'
      PythonVersion: '2.7'
      CoverageArg: ''
      RunForPR: true
    Linux_Python35:
      OSVmImage: 'ubuntu-18.04'
      PythonVersion: '3.5'
      CoverageArg: ''
      RunForPR: false
    Linux_Python38:
      OSVmImage: 'ubuntu-18.04'
      PythonVersion: '3.8'
      CoverageArg: ''
      RunForPR: true
    Windows_Python35:
      OSVmImage: 'windows-2019'
      PythonVersion: '3.5'
      CoverageArg: ''
      RunForPR: true
    MacOS_Python27:
      OSVmImage: 'macOS-10.15'
      PythonVersion: '2.7'
      CoverageArg: ''
      RunForPR: false
    Linux_pypy3:
      OSVmImage: 'ubuntu-18.04'
      PythonVersion: 'pypy3'
      CoverageArg: '--disablecov'
      RunForPR: false

  
jobs:
  - job: 'Analyze'
    condition: and(succeededOrFailed(), ne(variables['Skip.Analyze'], 'true'))
    variables:
    - template: ../variables/globals.yml

    pool:
      vmImage: 'ubuntu-18.04'

    steps:
    - template: ../steps/analyze.yml
      parameters: 
        ServiceDirectory: ${{ parameters.ServiceDirectory }}
        BuildTargetingString: ${{ parameters.BuildTargetingString }}
        TestMarkArgument: ${{ parameters.TestMarkArgument }}
        Artifacts: ${{ parameters.Artifacts }}